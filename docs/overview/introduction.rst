
Introduction
============

Overview
--------

libagio is a cross-platform async I/O library designed for C++ agile development. It enables you to build a high performance app with minimal lines of code, just like you do in Python or Node.JS, but with C++'s flexibility. 


It is very important to know that libagio is, but is more than a C++ wrapper of ``libuv`` (the C library that powered Node.JS behind the scene). In addition to the system I/O functionalities, libagio provides developers with a simple callback system to connect events or network layers together, which will be demonstrated later. 

As an asynchronous library, libagio relies on an event loop ``Agio::Loop`` that maintains a queue of events and runs the events one by one until there is none left. These events are generated by services like ``UdpSocket``, ``Timer``, or ``AsyncEvents``. As shown in the figure below, libagio abstracts all the services that may rely on the event loop into class ``AgioService``, and the rest are inherited from ``AgioObject`` (note that ``AgioService`` also inherits from ``AgioObject``). ``AgioObject`` is basically a C++ wrapper class of a C "class", or say, "struct". The reason we have this abstraction is not only to organize the library structure, but also to help implement the garbage collector in the future of this project.

.. graphviz::
	
    digraph G {
        graph [fontname = "helvetica", fontcolor="#555555"];
        node [fontname = "helvetica", style="rounded, filled", shape=box, color=none, fontcolor="#555555", fillcolor="#ffffff50"];
        edge [fontname = "helvetica"];
        
        subgraph cluster {
            label = "libagio";
            color = "#e8f5e9"; 
            style = "rounded, filled";
            
            subgraph cluster_1 {
                label = "AgioObject";
                color = "#c8e6c9"; 
                style = "rounded, filled";
            
                n11 [label="..."];
                n12 [label="Loop"];
                n13 [label="Buffer"];
                
                subgraph cluster_0 {
                    label = "AgioService";
                    color = "#a5d6a7"; 
                    style = "rounded, filled";

                    n0 [label="..."];
                    n1 [label="TcpSocket"]; 
                    n2 [label="UdpSocket"];
                    n3 [label="AsyncEvent"];
                    n4 [label="Timer"];
                    n5 [label="File"];
                }
            }
            

        }
    }
    
    
    
    
    
    
	
	
	
	



Get Started
-----------


Client:
~~~~~~~

.. literalinclude:: ../../examples/tcp/client/main.cpp
	:language: c++
